{
  "network_configuration": {
    "default_enable_cis_checks": false,
    "network_configuration_categories": {
      "spokes": {
        "vcns": {
          "VCN-PROD-KEY": {
            "compartment_id": "CMP-LZP-P-NETWORK-KEY",
            "block_nat_traffic": false,
            "cidr_blocks": [
              "10.0.80.0/21"
            ],
            "display_name": "vcn-fra-lzp-p-platform-oke",
            "dns_label": "vcnfralzppoke",
            "is_attach_drg": false,
            "is_create_igw": false,
            "is_ipv6enabled": false,
            "is_oracle_gua_allocation_enabled": false,
            "security_lists": {
              "SECLIST-PROD-PODS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "sl-01-lzp-p-platform-pods",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PROD-WORKERS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "sl-02-lzp-p-platform-workers",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "sl-03-lzp-p-platform-lb",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PROD-CP-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "sl-04-lzp-p-platform-cp",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              }
            },
            "network_security_groups": {
              "NSG-PROD-CP": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "nsg-prod-cp",
                "egress_rules": {
                  "nsg_pods": {
                    "description": "Allow TCP egress from OKE control plane to pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_10250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP egress from OKE control plane to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "protocol": "ICMP",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress for Kubernetes control plane inter-communication",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from OKE control plane to OCI services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods_12250": {
                    "description": "Allow TCP ingress from pods to kube-apiserver",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_pods_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP ingress for path discovery from worker nodes",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow TCP ingress to kube-apiserver from 0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  }
                }
              },
              "NSG-PROD-PRIV-LB": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "nsg-prod-lb",
                "egress_rules": {
                  "nsg_workers": {
                    "description": "Allow TCP egress from public load balancers to workers nodes for NodePort traffic",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_workers_30000_32767": {
                    "description": "Allow TCP egress from public load balancers to worker nodes for health checks",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_workers_ICMP": {
                    "description": "Allow ICMP egress from public load balancers to worker nodes for path discovery",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  }
                },
                "ingress_rules": {}
              },
              "NSG-PROD-WORKERS": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "nsg-prod-workers",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from workers to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from workers to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from workers for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from workers to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_cp_10250": {
                    "description": "Allow TCP egress from workers to OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "stateless": false
                  },
                  "nsg_cp_12250": {
                    "description": "Allow TCP ingress to workers for health check from OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from workers for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from workers to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to workers from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to workers from Kubernetes control plane for webhooks served by workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp_10256": {
                    "description": "Allow TCP ingress to workers for a health check from OKE control plane",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PRIV-LB",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_pub_lb_30000_30000": {
                    "description": "Allow TCP ingress to workers from public load balancers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PRIV-LB",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              },
              "NSG-PROD-PODS": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "nsg-prod-pods",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from pods to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from pods to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from pods to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from pods for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from pods to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to pods from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to pods from Kubernetes control plane for webhooks served by pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              }
            },
            "route_tables": {
              "RT-PROD-WORKERS-KEY": {
                "display_name": " rt-fra-lzp-p-workers",
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to DRG",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              },
              "RT-PROD-PODS-KEY": {
                "display_name": " rt-fra-lzp-p-pods",
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to Hub Dynamic Routing Gateway",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              },
              "RT-PROD-CP-KEY": {
                "display_name": " rt-fra-lzp-p-cp",
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to Hub Dynamic Routing Gateway",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              },
              "RT-PROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "rt-fra-lzp-p-lb",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to Hub Dynamic Routing Gateway",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              },
              "RT-PROD-GENERIC-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "display_name": "rt-fra-lzp-p-generic",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to Hub Dynamic Routing Gateway",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              }
            },
            "subnets": {
              "SN-PROD-PODS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.84.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-pods",
                "dns_label": "snpplatokepods",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-PODS-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-PODS-KEY"
                ]
              },
              "SN-PROD-WORKERS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.82.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-workers",
                "dns_label": "snpplatokework",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-WORKERS-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-WORKERS-KEY"
                ]
              },
              "SN-PROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.80.0/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-lb",
                "dns_label": "snpplatmokelb",
                "prohibit_internet_ingress": false,
                "prohibit_public_ip_on_vnic": false,
                "route_table_key": "RT-PROD-PRIV-LB-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-PRIV-LB-KEY"
                ]
              },
              "SN-PROD-DATABASE-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.86.0/24",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-db",
                "dns_label": "snpplatokedb",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-CP-KEY"
                ]
              },
              "SN-PROD-BASTION-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.81.0/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": " sn-fra-lzp-p-platform-oke-bastion",
                "dns_label": "snpplatfokebast",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-CP-KEY"
                ]
              },
              "SN-PROD-FSS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.81.128/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-fss",
                "dns_label": "snpplatfokefss",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-CP-KEY"
                ]
              },
              "SN-PROD-CP-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.80.128/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-p-platform-oke-cp",
                "dns_label": "snpplatokecp",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PROD-CP-KEY",
                "security_list_keys": [
                  "SECLIST-PROD-CP-KEY"
                ]
              }
            },
            "vcn_specific_gateways": {
              "service_gateways": {
                "SGW-PROD-KEY": {
                  "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                  "display_name": "sgw-fra-lzp-prod",
                  "services": "all-services"
                }
              }
            }
          },
          "VCN-PREPROD-KEY": {
            "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
            "block_nat_traffic": false,
            "cidr_blocks": [
              "10.0.144.0/21"
            ],
            "display_name": "vcn-fra-lzp-pp-platform-oke",
            "dns_label": "vcnfralzpdoke",
            "is_attach_drg": false,
            "is_create_igw": false,
            "is_ipv6enabled": false,
            "is_oracle_gua_allocation_enabled": false,
            "security_lists": {
              "SECLIST-PREPROD-PODS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "sl-01-lzp-pp-platform-pods",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PREPROD-WORKERS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "sl-02-lzp-pp-platform-workers",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PREPROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "sl-03-lzp-pp-platform-lb",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              },
              "SECLIST-PREPROD-CP-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "sl-04-lzp-pp-platform-cp",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              }
            },
            "network_security_groups": {
              "NSG-PREPROD-CP": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "nsg-preprod-cp",
                "egress_rules": {
                  "nsg_pods": {
                    "description": "Allow TCP egress from OKE control plane to pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-PODS",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_10250": {
                    "description": "Allow TCP egress for path discovery to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP egress from OKE control plane to worker nodes",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "protocol": "ICMP",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress for Kubernetes control plane inter-communication",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from OKE control plane to OCI services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods_12250": {
                    "description": "Allow TCP ingress from pods to kube-apiserver",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_pods_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PODS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_12250": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_workers_icmp": {
                    "description": "Allow ICMP ingress for path discovery from worker nodes",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow TCP ingress to kube-apiserver from 0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  }
                }
              },
              "NSG-PREPROD-PRIV-LB": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "nsg-preprod-lb",
                "egress_rules": {
                  "nsg_workers": {
                    "description": "Allow TCP egress from public load balancers to workers nodes for NodePort traffic",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_workers_30000_32767": {
                    "description": "Allow TCP egress from public load balancers to worker nodes for health checks",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_workers_ICMP": {
                    "description": "Allow ICMP egress from public load balancers to worker nodes for path discovery",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  }
                },
                "ingress_rules": {}
              },
              "NSG-PREPROD-WORKERS": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "nsg-preprod-workers",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from workers to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from workers to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from workers for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from workers to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_cp_10250": {
                    "description": "Allow TCP egress from workers to OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "10250",
                    "dst_port_max": "10250",
                    "stateless": false
                  },
                  "nsg_cp_12250": {
                    "description": "Allow TCP ingress to workers for health check from OKE control plane",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "12250",
                    "dst_port_max": "12250",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from workers for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from workers to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to workers from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to workers from other workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to workers from Kubernetes control plane for webhooks served by workers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp_10256": {
                    "description": "Allow TCP ingress to workers for health check from OKE control plane",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PRIV-LB",
                    "protocol": "TCP",
                    "dst_port_min": "10256",
                    "dst_port_max": "10256",
                    "stateless": false
                  },
                  "nsg_pub_lb_30000_30000": {
                    "description": "Allow TCP ingress to workers from public load balancers",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PRIV-LB",
                    "protocol": "TCP",
                    "dst_port_min": "30000",
                    "dst_port_max": "32767",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              },
              "NSG-PREPROD-PODS": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "nsg-preprod-pods",
                "egress_rules": {
                  "anywhere": {
                    "description": "Allow ALL egress from pods to internet",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  },
                  "nsg_pods": {
                    "description": "Allow ALL egress from pods to other pods",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-PODS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL egress from pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-WORKERS",
                    "protocol": "ALL",
                    "stateless": false
                  },
                  "nsg_cp_6443": {
                    "description": "Allow TCP egress from pods to Kubernetes API server",
                    "dst_type": "NETWORK_SECURITY_GROUP",
                    "dst": "NSG-PREPROD-CP",
                    "protocol": "TCP",
                    "dst_port_min": "6443",
                    "dst_port_max": "6443",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP egress from pods for path discovery",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "stateless": false
                  },
                  "nsg_service": {
                    "description": "Allow TCP egress from pods to OCI Services",
                    "dst": "all-services",
                    "dst_type": "SERVICE_CIDR_BLOCK",
                    "protocol": "TCP",
                    "stateless": false
                  }
                },
                "ingress_rules": {
                  "nsg_pods": {
                    "description": "Allow ALL ingress to pods from other pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-PODS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_workers": {
                    "description": "Allow ALL ingress to pods for cross-node pod communication when using NodePorts or hostNetwork: true",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-WORKERS",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_cp": {
                    "description": "Allow ALL ingress to pods from Kubernetes control plane for webhooks served by pods",
                    "src_type": "NETWORK_SECURITY_GROUP",
                    "src": "NSG-PREPROD-CP",
                    "protocol": "ALL",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  },
                  "nsg_icmp": {
                    "description": "Allow ICMP ingress to pods for path discovery",
                    "src_type": "CIDR_BLOCK",
                    "src": "0.0.0.0/0",
                    "protocol": "ICMP",
                    "icmp_type": "3",
                    "icmp_code": "4",
                    "dst_port_min": "80",
                    "dst_port_max": "80",
                    "stateless": false
                  }
                }
              }
            },
            "route_tables": {
              "RT-PREPROD-WORKERS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": " rt-fra-lzp-pp-workers",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PREPROD-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PREPROD-PODS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": " rt-fra-lzp-pp-pods",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PREPROD-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PREPROD-CP-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": " rt-fra-lzp-pp-cp",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PREPROD-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              },
              "RT-PREPROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "rt-fra-lzp-pp-lb",
                "route_rules": {
                  "drg_route": {
                    "description": "Route to Hub Dynamic Routing Gateway",
                    "destination": "0.0.0.0/0",
                    "destination_type": "CIDR_BLOCK",
                    "network_entity_key": "DRG-FRA-LZP-HUB-KEY"
                  }
                }
              },
              "RT-PREPROD-GENERIC-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "display_name": "rt-fra-lzp-pp-generic",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-PREPROD-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              }
            },
            "subnets": {
              "SN-PREPROD-PODS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.148.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-pods",
                "dns_label": "sndplatokepods",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-PODS-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-PODS-KEY"
                ]
              },
              "SN-PREPROD-WORKERS-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.146.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-workers",
                "dns_label": "sndplatokework",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-WORKERS-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-WORKERS-KEY"
                ]
              },
              "SN-PREPROD-PRIV-LB-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.144.0/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-PRIV-lb",
                "dns_label": "sndplatokepublb",
                "prohibit_internet_ingress": false,
                "prohibit_public_ip_on_vnic": false,
                "route_table_key": "RT-PREPROD-PRIV-LB-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-PRIV-LB-KEY"
                ]
              },
              "SN-PREPROD-CP-KEY": {
                "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.144.128/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-cp",
                "dns_label": "sndplatokecp",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-CP-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-CP-KEY"
                ]
              },
              "SN-PREPROD-DATABASE-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.150.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-db",
                "dns_label": "sndplatokedb",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-CP-KEY"
                ]
              },
              "SN-PREPROD-BASTION-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.145.0/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": " sn-fra-lzp-pp-platform-oke-bastion",
                "dns_label": "sndplatfokebast",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-CP-KEY"
                ]
              },
              "SN-PREPROD-FSS-KEY": {
                "compartment_id": "CMP-LZP-P-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.145.128/25",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-pp-platform-oke-fss",
                "dns_label": "sndplatfokefss",
                "prohibit_internet_ingress": true,
                "prohibit_public_ip_on_vnic": true,
                "route_table_key": "RT-PREPROD-GENERIC-KEY",
                "security_list_keys": [
                  "SECLIST-PREPROD-CP-KEY"
                ]
              }
            },
            "vcn_specific_gateways": {
              "service_gateways": {
                "SGW-PREPROD-KEY": {
                  "compartment_id": "CMP-LZP-PP-NETWORK-KEY",
                  "display_name": "sgw-fra-lzp-dev",
                  "services": "all-services"
                }
              }
            }
          },
          "VCN-MGT-KEY": {
            "compartment_id": "CMP-LZP-NETWORK-KEY",
            "block_nat_traffic": false,
            "cidr_blocks": [
              "10.0.16.0/21"
            ],
            "display_name": "vcn-fra-lzp-m-platform-oke",
            "dns_label": "vcnfralzpmoke",
            "is_attach_drg": false,
            "is_create_igw": false,
            "is_ipv6enabled": false,
            "is_oracle_gua_allocation_enabled": false,
            "security_lists": {
              "SECLIST-MGT-KEY": {
                "compartment_id": "CMP-LZP-NETWORK-KEY",
                "display_name": "mgt",
                "defined_tags": null,
                "freeform_tags": null,
                "egress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "dst": "0.0.0.0/0",
                    "dst_type": "CIDR_BLOCK",
                    "protocol": "ICMP",
                    "stateless": false
                  }
                ],
                "ingress_rules": [
                  {
                    "description": "ICMP traffic for: All",
                    "protocol": "ICMP",
                    "src": "0.0.0.0/0",
                    "src_type": "CIDR_BLOCK",
                    "stateless": false
                  }
                ]
              }
            },
            "network_security_groups": {},
            "route_tables": {
              "RT-MGT-KEY": {
                "compartment_id": "CMP-LZP-NETWORK-KEY",
                "display_name": "rt-fra-lzp-m-workers",
                "route_rules": {
                  "sgw_route": {
                    "network_entity_key": "SGW-MGT-KEY",
                    "description": "Route for sgw",
                    "destination": "all-services",
                    "destination_type": "SERVICE_CIDR_BLOCK"
                  }
                }
              }
            },
            "subnets": {
              "SN-MGT-PODS-KEY": {
                "compartment_id": "CMP-LZP-NETWORK-KEY",
                "availability_domain": null,
                "cidr_block": "10.0.16.0/23",
                "dhcp_options_key": "default_dhcp_options",
                "display_name": "sn-fra-lzp-m-platform-oke-mgt",
                "dns_label": "snmplatokemgt",
                "prohibit_internet_ingress": false,
                "prohibit_public_ip_on_vnic": false,
                "route_table_key": "RT-MGT-KEY",
                "security_list_keys": [
                  "SECLIST-MGT-KEY"
                ]
              }
            },
            "vcn_specific_gateways": {
              "service_gateways": {
                "SGW-MGT-KEY": {
                  "compartment_id": "CMP-LZP-NETWORK-KEY",
                  "display_name": "sgw-fra-lzp-mgt",
                  "services": "all-services"
                }
              }
            }
          }
        }
      }
    }
  }
}